{"ast":null,"code":"var _jsxFileName = \"/home/trisha/trisha/todo-tasks/client/src/components/todoTask/taskColumn.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Task from \"./task\";\nimport { Droppable } from \"react-beautiful-dnd\";\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  /* background: 'white'; */\n`;\nconst Title = styled.h3`\n  padding: 8px;\n  text-align: \"center\";\n`;\nconst TaskList = styled.div`\n  padding: 8px;\n  flex-grow: 1;\n`;\nexport default class TaskColumn extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, this.props.column.title), /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: this.props.column.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, provided => /*#__PURE__*/React.createElement(TaskList, Object.assign({\n      ref: provided.innerRef\n    }, provided.droppableProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }), this.props.tasks.map((task, index) => /*#__PURE__*/React.createElement(Task, {\n      key: Math.random().toString(),\n      index: index,\n      task: task,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    })), provided.placeholder)));\n  }\n\n}","map":{"version":3,"sources":["/home/trisha/trisha/todo-tasks/client/src/components/todoTask/taskColumn.jsx"],"names":["React","styled","Task","Droppable","Container","div","Title","h3","TaskList","TaskColumn","Component","render","props","column","title","id","provided","innerRef","droppableProps","tasks","map","task","index","Math","random","toString","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;;;;;;;;CAA7B;AASA,MAAMC,KAAK,GAAGL,MAAM,CAACM,EAAG;;;CAAxB;AAIA,MAAMC,QAAQ,GAAGP,MAAM,CAACI,GAAI;;;CAA5B;AAIA,eAAe,MAAMI,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AACtDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,KAA1B,CADF,eAEE,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,MAAX,CAAkBE,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,QAAQ,iBACP,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,QAAQ,CAACC;AAAxB,OAAsCD,QAAQ,CAACE,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACG,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACpB,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd,EADP;AAEE,MAAA,KAAK,EAAEH,KAFT;AAGE,MAAA,IAAI,EAAED,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,EAQGL,QAAQ,CAACU,WARZ,CAFJ,CAFF,CADF;AAmBD;;AArBqD","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Task from \"./task\";\nimport { Droppable } from \"react-beautiful-dnd\";\n\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  /* background: 'white'; */\n`;\nconst Title = styled.h3`\n  padding: 8px;\n  text-align: \"center\";\n`;\nconst TaskList = styled.div`\n  padding: 8px;\n  flex-grow: 1;\n`;\nexport default class TaskColumn extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Title>{this.props.column.title}</Title>\n        <Droppable droppableId={this.props.column.id}>\n          {provided => (\n            <TaskList ref={provided.innerRef} {...provided.droppableProps}>\n              {this.props.tasks.map((task, index) => (\n                <Task\n                  key={Math.random().toString()}\n                  index={index}\n                  task={task}\n                />\n              ))}\n              {provided.placeholder}\n            </TaskList>\n          )}\n        </Droppable>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}