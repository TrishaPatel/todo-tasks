{"ast":null,"code":"import _defineProperty from\"/home/trisha/trisha/todo-tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/trisha/trisha/todo-tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/trisha/trisha/todo-tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/trisha/trisha/todo-tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/trisha/trisha/todo-tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/trisha/trisha/todo-tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/trisha/trisha/todo-tasks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{TaskContext}from\"../../context/taskContext.js\";import TodoTask from\"./listTask.jsx\";import CreateTask from\"./createTask.jsx\";import UpdateTask from\"./updateTask.jsx\";import React from\"react\";import taskDetail from\"./initialData.js\";import{getKeyByValue}from\"../../utils/getKeyByValue.js\";import{getValueByKey}from\"../../utils/getValueByKey.js\";import{taskStatus}from\"../../utils/constant.js\";import{getMetaContent}from\"../../utils/metacontent.js\";var ShowTask=/*#__PURE__*/function(_React$Component){_inherits(ShowTask,_React$Component);var _super=_createSuper(ShowTask);function ShowTask(){var _this;_classCallCheck(this,ShowTask);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={taskDetail:taskDetail,description:\"\",status:getKeyByValue(taskStatus,\"To-Do\"),error:{},isLoading:false,newRecord:true,id:\"\"};_this.createTaskObject=function(taskValue){var taskId=taskValue.id.toString();var taskDetail=_this.state.taskDetail;taskDetail.tasks[taskId]=taskValue;var taskIdIndex=taskDetail.columns[getValueByKey(taskStatus,taskValue.status)].taskIds.findIndex(function(task){return task==taskValue.id;});if(taskIdIndex==-1){taskDetail.columns[getValueByKey(taskStatus,taskValue.status)].taskIds.push(taskValue.id);}return taskDetail;};_this.fetchTodos=function(){fetch(\"/todos\").then(function(response){return response.json();}).then(function(todos){var taskDetail;todos.map(function(value,key){taskDetail=_this.createTaskObject(value);});_this.setState(_objectSpread(_objectSpread({},taskDetail),{},{isLoading:true}));});};_this.addTask=function(event){event.preventDefault();try{var taskData={todo:{description:_this.state.description,status:_this.state.status},authenticity_token:getMetaContent(\"csrf-token\")};fetch(\"/todos\",{method:\"post\",body:JSON.stringify(taskData),headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"}}).then(function(response){console.log(response);if(!response.ok){throw response;}return response.json();//we only get here if there is no error\n}).then(function(response){var taskDetail=_this.createTaskObject(response);_this.setState({description:\"\",status:getKeyByValue(taskStatus,\"To-Do\"),taskDetail:taskDetail,error:{}});}).catch(function(error){var errorState={};errorState[\"message\"]=\"\";error.text().then(function(errorMessage){var errorList=Object.entries(JSON.parse(errorMessage));errorList.forEach(function(_ref){var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];errorState[key]=true;if(errorState[\"message\"]===\"\"){errorState[\"message\"]=value[0];}});_this.setState({error:errorState});});});}catch(error){// console.log(error);\n}};_this.editTask=function(taskid){fetch(\"/todos/\".concat(taskid)).then(function(response){return response.json();}).then(function(todos){_this.setState({description:todos.description,id:taskid,newRecord:false});});};_this.updateTask=function(event){event.preventDefault();var taskData={todo:{description:_this.state.description},authenticity_token:getMetaContent(\"csrf-token\")};fetch(\"/todos/\".concat(_this.state.id),{method:\"put\",body:JSON.stringify(taskData),headers:{\"Content-Type\":\"application/json\"}}).then(function(response){if(!response.ok){throw response;}return response.json();//we only get here if there is no error\n}).then(function(response){var taskDetail=_this.createTaskObject(response);_this.setState({description:\"\",status:getKeyByValue(taskStatus,\"To-Do\"),taskDetail:taskDetail,newRecord:true,error:{}});}).catch(function(error){var errorState={};errorState[\"message\"]=\"\";error.text().then(function(errorMessage){var errorList=Object.entries(JSON.parse(errorMessage));errorList.forEach(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],value=_ref4[1];errorState[key]=true;if(errorState[\"message\"]==\"\"){errorState[\"message\"]=value[0];}});_this.setState({error:errorState});});});};_this.deleteTask=function(taskId,event){event.stopPropagation();fetch(\"/todos/\".concat(taskId),{method:\"delete\"}).then(function(response){var taskDetail=_this.state.taskDetail;var deletedTaskStatus=taskDetail.tasks[taskId].status;var taskIds=taskDetail.columns[getValueByKey(taskStatus,deletedTaskStatus)].taskIds;var newTaskIds;newTaskIds=taskIds.filter(function(id){return id!=taskId;});delete taskDetail.tasks[taskId];taskDetail.columns[getValueByKey(taskStatus,deletedTaskStatus)].taskIds=newTaskIds;_this.setState(_objectSpread({},taskDetail));});};_this.handleChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.onDragEnd=function(result){var _objectSpread3;var destination=result.destination,source=result.source,draggableId=result.draggableId;if(!destination){return;}if(destination.droppableId===source.droppableId&&destination.index===source.index){return;}var start=_this.state.taskDetail.columns[source.droppableId];var finish=_this.state.taskDetail.columns[destination.droppableId];if(start===finish){var newTaskIds=Array.from(start.taskIds);newTaskIds.splice(source.index,1);newTaskIds.splice(destination.index,0,draggableId);var newColumn=_objectSpread(_objectSpread({},start),{},{taskIds:newTaskIds});var _newState=_objectSpread(_objectSpread({},_this.state.taskDetail),{},{columns:_objectSpread(_objectSpread({},_this.state.taskDetail.columns),{},_defineProperty({},newColumn.id,newColumn))});_this.setState({taskDetail:_newState});return;}var startTaskIds=Array.from(start.taskIds);startTaskIds.splice(source.index,1);var newStart=_objectSpread(_objectSpread({},start),{},{taskIds:startTaskIds});var finishTaskIds=Array.from(finish.taskIds);finishTaskIds.splice(destination.index,0,draggableId);var newFinish=_objectSpread(_objectSpread({},finish),{},{taskIds:finishTaskIds});var newState=_objectSpread(_objectSpread({},_this.state.taskDetail),{},{columns:_objectSpread(_objectSpread({},_this.state.taskDetail.columns),{},(_objectSpread3={},_defineProperty(_objectSpread3,newStart.id,newStart),_defineProperty(_objectSpread3,newFinish.id,newFinish),_objectSpread3))});newState.tasks[draggableId].status=getKeyByValue(taskStatus,destination.droppableId);try{var taskData={todo:{status:getKeyByValue(taskStatus,destination.droppableId)},authenticity_token:getMetaContent(\"csrf-token\")};fetch(\"/todos/\".concat(draggableId),{method:\"put\",body:JSON.stringify(taskData),headers:{\"Content-Type\":\"application/json\"}}).then(function(response){if(!response.ok){throw response;}return response.json();//we only get here if there is no error\n}).then(function(response){// this.fetchTodos();\n_this.setState({taskDetail:newState});}).catch(function(error){var errorState={};errorState[\"message\"]=\"\";error.text().then(function(errorMessage){var errorList=Object.entries(JSON.parse(errorMessage));errorList.forEach(function(_ref5){var _ref6=_slicedToArray(_ref5,2),key=_ref6[0],value=_ref6[1];errorState[key]=true;if(errorState[\"message\"]==\"\"){errorState[\"message\"]=value[0];}});_this.setState({error:errorState});});});}catch(error){}};return _this;}_createClass(ShowTask,[{key:\"componentDidMount\",value:function componentDidMount(){this.fetchTodos();}},{key:\"render\",value:function render(){var _this$state=this.state,isLoading=_this$state.isLoading,id=_this$state.id,newRecord=_this$state.newRecord,error=_this$state.error;console.log(error);if(isLoading){return/*#__PURE__*/React.createElement(TaskContext.Provider,{value:{state:this.state,addTask:this.addTask,handleChange:this.handleChange,onDragEnd:this.onDragEnd,editTask:this.editTask,updateTask:this.updateTask,deleteTask:this.deleteTask}},newRecord===true?/*#__PURE__*/React.createElement(CreateTask,null):/*#__PURE__*/React.createElement(UpdateTask,{id:id}),/*#__PURE__*/React.createElement(TodoTask,null));}else{return/*#__PURE__*/React.createElement(\"div\",null);}}}]);return ShowTask;}(React.Component);export{ShowTask as default};","map":{"version":3,"sources":["/home/trisha/trisha/todo-tasks/src/components/todoTask/showTask.jsx"],"names":["TaskContext","TodoTask","CreateTask","UpdateTask","React","taskDetail","getKeyByValue","getValueByKey","taskStatus","getMetaContent","ShowTask","state","description","status","error","isLoading","newRecord","id","createTaskObject","taskValue","taskId","toString","tasks","taskIdIndex","columns","taskIds","findIndex","task","push","fetchTodos","fetch","then","response","json","todos","map","value","key","setState","addTask","event","preventDefault","taskData","todo","authenticity_token","method","body","JSON","stringify","headers","Accept","console","log","ok","catch","errorState","text","errorMessage","errorList","Object","entries","parse","forEach","editTask","taskid","updateTask","deleteTask","stopPropagation","deletedTaskStatus","newTaskIds","filter","handleChange","target","name","onDragEnd","result","destination","source","draggableId","droppableId","index","start","finish","Array","from","splice","newColumn","newState","startTaskIds","newStart","finishTaskIds","newFinish","Component"],"mappings":"ogCAAA,OAASA,WAAT,KAA4B,8BAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CAEA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,OAASC,aAAT,KAA8B,8BAA9B,CACA,OAASC,aAAT,KAA8B,8BAA9B,CACA,OAASC,UAAT,KAA2B,yBAA3B,CACA,OAASC,cAAT,KAA+B,4BAA/B,C,GAEqBC,CAAAA,Q,+UACnBC,K,CAAQ,CACNN,UAAU,CAAEA,UADN,CAENO,WAAW,CAAE,EAFP,CAGNC,MAAM,CAAEP,aAAa,CAACE,UAAD,CAAa,OAAb,CAHf,CAINM,KAAK,CAAE,EAJD,CAKNC,SAAS,CAAE,KALL,CAMNC,SAAS,CAAE,IANL,CAONC,EAAE,CAAE,EAPE,C,OAYRC,gB,CAAmB,SAAAC,SAAS,CAAI,CAC9B,GAAIC,CAAAA,MAAM,CAAGD,SAAS,CAACF,EAAV,CAAaI,QAAb,EAAb,CACA,GAAIhB,CAAAA,UAAU,CAAG,MAAKM,KAAL,CAAWN,UAA5B,CACAA,UAAU,CAACiB,KAAX,CAAiBF,MAAjB,EAA2BD,SAA3B,CACA,GAAII,CAAAA,WAAW,CAAGlB,UAAU,CAACmB,OAAX,CAChBjB,aAAa,CAACC,UAAD,CAAaW,SAAS,CAACN,MAAvB,CADG,EAEhBY,OAFgB,CAERC,SAFQ,CAEE,SAAAC,IAAI,QAAIA,CAAAA,IAAI,EAAIR,SAAS,CAACF,EAAtB,EAFN,CAAlB,CAGA,GAAIM,WAAW,EAAI,CAAC,CAApB,CAAuB,CACrBlB,UAAU,CAACmB,OAAX,CACEjB,aAAa,CAACC,UAAD,CAAaW,SAAS,CAACN,MAAvB,CADf,EAEEY,OAFF,CAEUG,IAFV,CAEeT,SAAS,CAACF,EAFzB,EAGD,CACD,MAAOZ,CAAAA,UAAP,CACD,C,OACDwB,U,CAAa,UAAM,CACjBC,KAAK,CAAC,QAAD,CAAL,CACGC,IADH,CACQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADhB,EAEGF,IAFH,CAEQ,SAAAG,KAAK,CAAI,CACb,GAAI7B,CAAAA,UAAJ,CACA6B,KAAK,CAACC,GAAN,CAAU,SAACC,KAAD,CAAQC,GAAR,CAAgB,CACxBhC,UAAU,CAAG,MAAKa,gBAAL,CAAsBkB,KAAtB,CAAb,CACD,CAFD,EAGA,MAAKE,QAAL,gCAAmBjC,UAAnB,MAA+BU,SAAS,CAAE,IAA1C,IACD,CARH,EASD,C,OACDwB,O,CAAU,SAAAC,KAAK,CAAI,CACjBA,KAAK,CAACC,cAAN,GACA,GAAI,CACF,GAAIC,CAAAA,QAAQ,CAAG,CACbC,IAAI,CAAE,CACJ/B,WAAW,CAAE,MAAKD,KAAL,CAAWC,WADpB,CAEJC,MAAM,CAAE,MAAKF,KAAL,CAAWE,MAFf,CADO,CAKb+B,kBAAkB,CAAEnC,cAAc,CAAC,YAAD,CALrB,CAAf,CAOAqB,KAAK,CAAC,QAAD,CAAW,CACde,MAAM,CAAE,MADM,CAEdC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAFQ,CAGdO,OAAO,CAAE,CACPC,MAAM,CAAE,kBADD,CAEP,eAAgB,kBAFT,CAHK,CAAX,CAAL,CAQGnB,IARH,CAQQ,SAAAC,QAAQ,CAAI,CAChBmB,OAAO,CAACC,GAAR,CAAYpB,QAAZ,EACA,GAAI,CAACA,QAAQ,CAACqB,EAAd,CAAkB,CAChB,KAAMrB,CAAAA,QAAN,CACD,CACD,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CAAwB;AACzB,CAdH,EAeGF,IAfH,CAeQ,SAAAC,QAAQ,CAAI,CAChB,GAAI3B,CAAAA,UAAU,CAAG,MAAKa,gBAAL,CAAsBc,QAAtB,CAAjB,CACA,MAAKM,QAAL,CAAc,CACZ1B,WAAW,CAAE,EADD,CAEZC,MAAM,CAAEP,aAAa,CAACE,UAAD,CAAa,OAAb,CAFT,CAGZH,UAAU,CAAEA,UAHA,CAIZS,KAAK,CAAE,EAJK,CAAd,EAMD,CAvBH,EAwBGwC,KAxBH,CAwBS,SAAAxC,KAAK,CAAI,CACd,GAAIyC,CAAAA,UAAU,CAAG,EAAjB,CACAA,UAAU,CAAC,SAAD,CAAV,CAAwB,EAAxB,CACAzC,KAAK,CAAC0C,IAAN,GAAazB,IAAb,CAAkB,SAAA0B,YAAY,CAAI,CAChC,GAAIC,CAAAA,SAAS,CAAGC,MAAM,CAACC,OAAP,CAAeb,IAAI,CAACc,KAAL,CAAWJ,YAAX,CAAf,CAAhB,CACAC,SAAS,CAACI,OAAV,CAAkB,cAAkB,kCAAhBzB,GAAgB,UAAXD,KAAW,UAClCmB,UAAU,CAAClB,GAAD,CAAV,CAAkB,IAAlB,CACA,GAAIkB,UAAU,CAAC,SAAD,CAAV,GAA0B,EAA9B,CAAkC,CAChCA,UAAU,CAAC,SAAD,CAAV,CAAwBnB,KAAK,CAAC,CAAD,CAA7B,CACD,CACF,CALD,EAMA,MAAKE,QAAL,CAAc,CAAExB,KAAK,CAAEyC,UAAT,CAAd,EACD,CATD,EAUD,CArCH,EAsCD,CAAC,MAAOzC,KAAP,CAAc,CACd;AACD,CACF,C,OACDiD,Q,CAAW,SAAAC,MAAM,CAAI,CACnBlC,KAAK,kBAAWkC,MAAX,EAAL,CACGjC,IADH,CACQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADhB,EAEGF,IAFH,CAEQ,SAAAG,KAAK,CAAI,CACb,MAAKI,QAAL,CAAc,CACZ1B,WAAW,CAAEsB,KAAK,CAACtB,WADP,CAEZK,EAAE,CAAE+C,MAFQ,CAGZhD,SAAS,CAAE,KAHC,CAAd,EAKD,CARH,EASD,C,OACDiD,U,CAAa,SAAAzB,KAAK,CAAI,CACpBA,KAAK,CAACC,cAAN,GACA,GAAIC,CAAAA,QAAQ,CAAG,CACbC,IAAI,CAAE,CACJ/B,WAAW,CAAE,MAAKD,KAAL,CAAWC,WADpB,CADO,CAIbgC,kBAAkB,CAAEnC,cAAc,CAAC,YAAD,CAJrB,CAAf,CAMAqB,KAAK,kBAAW,MAAKnB,KAAL,CAAWM,EAAtB,EAA4B,CAC/B4B,MAAM,CAAE,KADuB,CAE/BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAFyB,CAG/BO,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAHsB,CAA5B,CAAL,CAKGlB,IALH,CAKQ,SAAAC,QAAQ,CAAI,CAChB,GAAI,CAACA,QAAQ,CAACqB,EAAd,CAAkB,CAChB,KAAMrB,CAAAA,QAAN,CACD,CACD,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CAAwB;AACzB,CAVH,EAWGF,IAXH,CAWQ,SAAAC,QAAQ,CAAI,CAChB,GAAI3B,CAAAA,UAAU,CAAG,MAAKa,gBAAL,CAAsBc,QAAtB,CAAjB,CACA,MAAKM,QAAL,CAAc,CACZ1B,WAAW,CAAE,EADD,CAEZC,MAAM,CAAEP,aAAa,CAACE,UAAD,CAAa,OAAb,CAFT,CAGZH,UAAU,CAAVA,UAHY,CAIZW,SAAS,CAAE,IAJC,CAKZF,KAAK,CAAE,EALK,CAAd,EAOD,CApBH,EAqBGwC,KArBH,CAqBS,SAAAxC,KAAK,CAAI,CACd,GAAIyC,CAAAA,UAAU,CAAG,EAAjB,CACAA,UAAU,CAAC,SAAD,CAAV,CAAwB,EAAxB,CACAzC,KAAK,CAAC0C,IAAN,GAAazB,IAAb,CAAkB,SAAA0B,YAAY,CAAI,CAChC,GAAIC,CAAAA,SAAS,CAAGC,MAAM,CAACC,OAAP,CAAeb,IAAI,CAACc,KAAL,CAAWJ,YAAX,CAAf,CAAhB,CACAC,SAAS,CAACI,OAAV,CAAkB,eAAkB,mCAAhBzB,GAAgB,UAAXD,KAAW,UAClCmB,UAAU,CAAClB,GAAD,CAAV,CAAkB,IAAlB,CACA,GAAIkB,UAAU,CAAC,SAAD,CAAV,EAAyB,EAA7B,CAAiC,CAC/BA,UAAU,CAAC,SAAD,CAAV,CAAwBnB,KAAK,CAAC,CAAD,CAA7B,CACD,CACF,CALD,EAMA,MAAKE,QAAL,CAAc,CAAExB,KAAK,CAAEyC,UAAT,CAAd,EACD,CATD,EAUD,CAlCH,EAmCD,C,OACDW,U,CAAa,SAAC9C,MAAD,CAASoB,KAAT,CAAmB,CAC9BA,KAAK,CAAC2B,eAAN,GACArC,KAAK,kBAAWV,MAAX,EAAqB,CAAEyB,MAAM,CAAE,QAAV,CAArB,CAAL,CAAgDd,IAAhD,CAAqD,SAAAC,QAAQ,CAAI,CAC/D,GAAI3B,CAAAA,UAAU,CAAG,MAAKM,KAAL,CAAWN,UAA5B,CACA,GAAI+D,CAAAA,iBAAiB,CAAG/D,UAAU,CAACiB,KAAX,CAAiBF,MAAjB,EAAyBP,MAAjD,CACA,GAAIY,CAAAA,OAAO,CACTpB,UAAU,CAACmB,OAAX,CAAmBjB,aAAa,CAACC,UAAD,CAAa4D,iBAAb,CAAhC,EACG3C,OAFL,CAGA,GAAI4C,CAAAA,UAAJ,CACAA,UAAU,CAAG5C,OAAO,CAAC6C,MAAR,CAAe,SAAArD,EAAE,CAAI,CAChC,MAAOA,CAAAA,EAAE,EAAIG,MAAb,CACD,CAFY,CAAb,CAGA,MAAOf,CAAAA,UAAU,CAACiB,KAAX,CAAiBF,MAAjB,CAAP,CACAf,UAAU,CAACmB,OAAX,CACEjB,aAAa,CAACC,UAAD,CAAa4D,iBAAb,CADf,EAEE3C,OAFF,CAEY4C,UAFZ,CAGA,MAAK/B,QAAL,kBAAmBjC,UAAnB,GACD,CAfD,EAgBD,C,OACDkE,Y,CAAe,SAAA/B,KAAK,CAAI,CACtB,MAAKF,QAAL,oBAAiBE,KAAK,CAACgC,MAAN,CAAaC,IAA9B,CAAqCjC,KAAK,CAACgC,MAAN,CAAapC,KAAlD,GACD,C,OAEDsC,S,CAAY,SAAAC,MAAM,CAAI,uBACZC,CAAAA,WADY,CACyBD,MADzB,CACZC,WADY,CACCC,MADD,CACyBF,MADzB,CACCE,MADD,CACSC,WADT,CACyBH,MADzB,CACSG,WADT,CAEpB,GAAI,CAACF,WAAL,CAAkB,CAChB,OACD,CACD,GACEA,WAAW,CAACG,WAAZ,GAA4BF,MAAM,CAACE,WAAnC,EACAH,WAAW,CAACI,KAAZ,GAAsBH,MAAM,CAACG,KAF/B,CAGE,CACA,OACD,CACD,GAAMC,CAAAA,KAAK,CAAG,MAAKtE,KAAL,CAAWN,UAAX,CAAsBmB,OAAtB,CAA8BqD,MAAM,CAACE,WAArC,CAAd,CACA,GAAMG,CAAAA,MAAM,CAAG,MAAKvE,KAAL,CAAWN,UAAX,CAAsBmB,OAAtB,CAA8BoD,WAAW,CAACG,WAA1C,CAAf,CACA,GAAIE,KAAK,GAAKC,MAAd,CAAsB,CACpB,GAAMb,CAAAA,UAAU,CAAGc,KAAK,CAACC,IAAN,CAAWH,KAAK,CAACxD,OAAjB,CAAnB,CACA4C,UAAU,CAACgB,MAAX,CAAkBR,MAAM,CAACG,KAAzB,CAAgC,CAAhC,EACAX,UAAU,CAACgB,MAAX,CAAkBT,WAAW,CAACI,KAA9B,CAAqC,CAArC,CAAwCF,WAAxC,EACA,GAAMQ,CAAAA,SAAS,gCACVL,KADU,MAEbxD,OAAO,CAAE4C,UAFI,EAAf,CAIA,GAAMkB,CAAAA,SAAQ,gCACT,MAAK5E,KAAL,CAAWN,UADF,MAEZmB,OAAO,gCACF,MAAKb,KAAL,CAAWN,UAAX,CAAsBmB,OADpB,wBAEJ8D,SAAS,CAACrE,EAFN,CAEWqE,SAFX,EAFK,EAAd,CAOA,MAAKhD,QAAL,CAAc,CAAEjC,UAAU,CAAEkF,SAAd,CAAd,EACA,OACD,CACD,GAAMC,CAAAA,YAAY,CAAGL,KAAK,CAACC,IAAN,CAAWH,KAAK,CAACxD,OAAjB,CAArB,CACA+D,YAAY,CAACH,MAAb,CAAoBR,MAAM,CAACG,KAA3B,CAAkC,CAAlC,EACA,GAAMS,CAAAA,QAAQ,gCACTR,KADS,MAEZxD,OAAO,CAAE+D,YAFG,EAAd,CAIA,GAAME,CAAAA,aAAa,CAAGP,KAAK,CAACC,IAAN,CAAWF,MAAM,CAACzD,OAAlB,CAAtB,CACAiE,aAAa,CAACL,MAAd,CAAqBT,WAAW,CAACI,KAAjC,CAAwC,CAAxC,CAA2CF,WAA3C,EACA,GAAMa,CAAAA,SAAS,gCACVT,MADU,MAEbzD,OAAO,CAAEiE,aAFI,EAAf,CAIA,GAAMH,CAAAA,QAAQ,gCACT,MAAK5E,KAAL,CAAWN,UADF,MAEZmB,OAAO,gCACF,MAAKb,KAAL,CAAWN,UAAX,CAAsBmB,OADpB,uDAEJiE,QAAQ,CAACxE,EAFL,CAEUwE,QAFV,iCAGJE,SAAS,CAAC1E,EAHN,CAGW0E,SAHX,kBAFK,EAAd,CAQAJ,QAAQ,CAACjE,KAAT,CAAewD,WAAf,EAA4BjE,MAA5B,CAAqCP,aAAa,CAChDE,UADgD,CAEhDoE,WAAW,CAACG,WAFoC,CAAlD,CAIA,GAAI,CACF,GAAIrC,CAAAA,QAAQ,CAAG,CACbC,IAAI,CAAE,CACJ9B,MAAM,CAAEP,aAAa,CAACE,UAAD,CAAaoE,WAAW,CAACG,WAAzB,CADjB,CADO,CAIbnC,kBAAkB,CAAEnC,cAAc,CAAC,YAAD,CAJrB,CAAf,CAMAqB,KAAK,kBAAWgD,WAAX,EAA0B,CAC7BjC,MAAM,CAAE,KADqB,CAE7BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAFuB,CAG7BO,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAHoB,CAA1B,CAAL,CAKGlB,IALH,CAKQ,SAAAC,QAAQ,CAAI,CAChB,GAAI,CAACA,QAAQ,CAACqB,EAAd,CAAkB,CAChB,KAAMrB,CAAAA,QAAN,CACD,CACD,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CAAwB;AACzB,CAVH,EAWGF,IAXH,CAWQ,SAAAC,QAAQ,CAAI,CAChB;AACA,MAAKM,QAAL,CAAc,CAAEjC,UAAU,CAAEkF,QAAd,CAAd,EACD,CAdH,EAeGjC,KAfH,CAeS,SAAAxC,KAAK,CAAI,CACd,GAAIyC,CAAAA,UAAU,CAAG,EAAjB,CACAA,UAAU,CAAC,SAAD,CAAV,CAAwB,EAAxB,CACAzC,KAAK,CAAC0C,IAAN,GAAazB,IAAb,CAAkB,SAAA0B,YAAY,CAAI,CAChC,GAAIC,CAAAA,SAAS,CAAGC,MAAM,CAACC,OAAP,CAAeb,IAAI,CAACc,KAAL,CAAWJ,YAAX,CAAf,CAAhB,CACAC,SAAS,CAACI,OAAV,CAAkB,eAAkB,mCAAhBzB,GAAgB,UAAXD,KAAW,UAClCmB,UAAU,CAAClB,GAAD,CAAV,CAAkB,IAAlB,CACA,GAAIkB,UAAU,CAAC,SAAD,CAAV,EAAyB,EAA7B,CAAiC,CAC/BA,UAAU,CAAC,SAAD,CAAV,CAAwBnB,KAAK,CAAC,CAAD,CAA7B,CACD,CACF,CALD,EAMA,MAAKE,QAAL,CAAc,CAAExB,KAAK,CAAEyC,UAAT,CAAd,EACD,CATD,EAUD,CA5BH,EA6BD,CAAC,MAAOzC,KAAP,CAAc,CAAE,CACnB,C,iGA1PmB,CAClB,KAAKe,UAAL,GACD,C,uCAyPQ,iBACqC,KAAKlB,KAD1C,CACCI,SADD,aACCA,SADD,CACYE,EADZ,aACYA,EADZ,CACgBD,SADhB,aACgBA,SADhB,CAC2BF,KAD3B,aAC2BA,KAD3B,CAEPqC,OAAO,CAACC,GAAR,CAAYtC,KAAZ,EACA,GAAIC,SAAJ,CAAe,CACb,mBACE,oBAAC,WAAD,CAAa,QAAb,EACE,KAAK,CAAE,CACLJ,KAAK,CAAE,KAAKA,KADP,CAEL4B,OAAO,CAAE,KAAKA,OAFT,CAGLgC,YAAY,CAAE,KAAKA,YAHd,CAILG,SAAS,CAAE,KAAKA,SAJX,CAKLX,QAAQ,CAAE,KAAKA,QALV,CAMLE,UAAU,CAAE,KAAKA,UANZ,CAOLC,UAAU,CAAE,KAAKA,UAPZ,CADT,EAWGlD,SAAS,GAAK,IAAd,cAAqB,oBAAC,UAAD,MAArB,cAAsC,oBAAC,UAAD,EAAY,EAAE,CAAEC,EAAhB,EAXzC,cAYE,oBAAC,QAAD,MAZF,CADF,CAgBD,CAjBD,IAiBO,CACL,mBAAO,+BAAP,CACD,CACF,C,sBA5RmCb,KAAK,CAACwF,S,SAAvBlF,Q","sourcesContent":["import { TaskContext } from \"../../context/taskContext.js\";\nimport TodoTask from \"./listTask.jsx\";\nimport CreateTask from \"./createTask.jsx\";\nimport UpdateTask from \"./updateTask.jsx\";\n\nimport React from \"react\";\nimport taskDetail from \"./initialData.js\";\nimport { getKeyByValue } from \"../../utils/getKeyByValue.js\";\nimport { getValueByKey } from \"../../utils/getValueByKey.js\";\nimport { taskStatus } from \"../../utils/constant.js\";\nimport { getMetaContent } from \"../../utils/metacontent.js\";\n\nexport default class ShowTask extends React.Component {\n  state = {\n    taskDetail: taskDetail,\n    description: \"\",\n    status: getKeyByValue(taskStatus, \"To-Do\"),\n    error: {},\n    isLoading: false,\n    newRecord: true,\n    id: \"\"\n  };\n  componentDidMount() {\n    this.fetchTodos();\n  }\n  createTaskObject = taskValue => {\n    let taskId = taskValue.id.toString();\n    let taskDetail = this.state.taskDetail;\n    taskDetail.tasks[taskId] = taskValue;\n    let taskIdIndex = taskDetail.columns[\n      getValueByKey(taskStatus, taskValue.status)\n    ].taskIds.findIndex(task => task == taskValue.id);\n    if (taskIdIndex == -1) {\n      taskDetail.columns[\n        getValueByKey(taskStatus, taskValue.status)\n      ].taskIds.push(taskValue.id);\n    }\n    return taskDetail;\n  };\n  fetchTodos = () => {\n    fetch(\"/todos\")\n      .then(response => response.json())\n      .then(todos => {\n        let taskDetail;\n        todos.map((value, key) => {\n          taskDetail = this.createTaskObject(value);\n        });\n        this.setState({ ...taskDetail, isLoading: true });\n      });\n  };\n  addTask = event => {\n    event.preventDefault();\n    try {\n      var taskData = {\n        todo: {\n          description: this.state.description,\n          status: this.state.status\n        },\n        authenticity_token: getMetaContent(\"csrf-token\")\n      };\n      fetch(\"/todos\", {\n        method: \"post\",\n        body: JSON.stringify(taskData),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(response => {\n          console.log(response);\n          if (!response.ok) {\n            throw response;\n          }\n          return response.json(); //we only get here if there is no error\n        })\n        .then(response => {\n          let taskDetail = this.createTaskObject(response);\n          this.setState({\n            description: \"\",\n            status: getKeyByValue(taskStatus, \"To-Do\"),\n            taskDetail: taskDetail,\n            error: {}\n          });\n        })\n        .catch(error => {\n          let errorState = {};\n          errorState[\"message\"] = \"\";\n          error.text().then(errorMessage => {\n            let errorList = Object.entries(JSON.parse(errorMessage));\n            errorList.forEach(([key, value]) => {\n              errorState[key] = true;\n              if (errorState[\"message\"] === \"\") {\n                errorState[\"message\"] = value[0];\n              }\n            });\n            this.setState({ error: errorState });\n          });\n        });\n    } catch (error) {\n      // console.log(error);\n    }\n  };\n  editTask = taskid => {\n    fetch(`/todos/${taskid}`)\n      .then(response => response.json())\n      .then(todos => {\n        this.setState({\n          description: todos.description,\n          id: taskid,\n          newRecord: false\n        });\n      });\n  };\n  updateTask = event => {\n    event.preventDefault();\n    var taskData = {\n      todo: {\n        description: this.state.description\n      },\n      authenticity_token: getMetaContent(\"csrf-token\")\n    };\n    fetch(`/todos/${this.state.id}`, {\n      method: \"put\",\n      body: JSON.stringify(taskData),\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw response;\n        }\n        return response.json(); //we only get here if there is no error\n      })\n      .then(response => {\n        let taskDetail = this.createTaskObject(response);\n        this.setState({\n          description: \"\",\n          status: getKeyByValue(taskStatus, \"To-Do\"),\n          taskDetail,\n          newRecord: true,\n          error: {}\n        });\n      })\n      .catch(error => {\n        let errorState = {};\n        errorState[\"message\"] = \"\";\n        error.text().then(errorMessage => {\n          let errorList = Object.entries(JSON.parse(errorMessage));\n          errorList.forEach(([key, value]) => {\n            errorState[key] = true;\n            if (errorState[\"message\"] == \"\") {\n              errorState[\"message\"] = value[0];\n            }\n          });\n          this.setState({ error: errorState });\n        });\n      });\n  };\n  deleteTask = (taskId, event) => {\n    event.stopPropagation();\n    fetch(`/todos/${taskId}`, { method: \"delete\" }).then(response => {\n      let taskDetail = this.state.taskDetail;\n      let deletedTaskStatus = taskDetail.tasks[taskId].status;\n      let taskIds =\n        taskDetail.columns[getValueByKey(taskStatus, deletedTaskStatus)]\n          .taskIds;\n      let newTaskIds;\n      newTaskIds = taskIds.filter(id => {\n        return id != taskId;\n      });\n      delete taskDetail.tasks[taskId];\n      taskDetail.columns[\n        getValueByKey(taskStatus, deletedTaskStatus)\n      ].taskIds = newTaskIds;\n      this.setState({ ...taskDetail });\n    });\n  };\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onDragEnd = result => {\n    const { destination, source, draggableId } = result;\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    const start = this.state.taskDetail.columns[source.droppableId];\n    const finish = this.state.taskDetail.columns[destination.droppableId];\n    if (start === finish) {\n      const newTaskIds = Array.from(start.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds\n      };\n      const newState = {\n        ...this.state.taskDetail,\n        columns: {\n          ...this.state.taskDetail.columns,\n          [newColumn.id]: newColumn\n        }\n      };\n      this.setState({ taskDetail: newState });\n      return;\n    }\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds\n    };\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds\n    };\n    const newState = {\n      ...this.state.taskDetail,\n      columns: {\n        ...this.state.taskDetail.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish\n      }\n    };\n    newState.tasks[draggableId].status = getKeyByValue(\n      taskStatus,\n      destination.droppableId\n    );\n    try {\n      var taskData = {\n        todo: {\n          status: getKeyByValue(taskStatus, destination.droppableId)\n        },\n        authenticity_token: getMetaContent(\"csrf-token\")\n      };\n      fetch(`/todos/${draggableId}`, {\n        method: \"put\",\n        body: JSON.stringify(taskData),\n        headers: { \"Content-Type\": \"application/json\" }\n      })\n        .then(response => {\n          if (!response.ok) {\n            throw response;\n          }\n          return response.json(); //we only get here if there is no error\n        })\n        .then(response => {\n          // this.fetchTodos();\n          this.setState({ taskDetail: newState });\n        })\n        .catch(error => {\n          let errorState = {};\n          errorState[\"message\"] = \"\";\n          error.text().then(errorMessage => {\n            let errorList = Object.entries(JSON.parse(errorMessage));\n            errorList.forEach(([key, value]) => {\n              errorState[key] = true;\n              if (errorState[\"message\"] == \"\") {\n                errorState[\"message\"] = value[0];\n              }\n            });\n            this.setState({ error: errorState });\n          });\n        });\n    } catch (error) {}\n  };\n  render() {\n    const { isLoading, id, newRecord, error } = this.state;\n    console.log(error);\n    if (isLoading) {\n      return (\n        <TaskContext.Provider\n          value={{\n            state: this.state,\n            addTask: this.addTask,\n            handleChange: this.handleChange,\n            onDragEnd: this.onDragEnd,\n            editTask: this.editTask,\n            updateTask: this.updateTask,\n            deleteTask: this.deleteTask\n          }}\n        >\n          {newRecord === true ? <CreateTask /> : <UpdateTask id={id} />}\n          <TodoTask />\n        </TaskContext.Provider>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}